name: Deploy FastAPI to VMSS

on:
  push:
    branches: [ main ]

env:
  AZURE_RESOURCE_GROUP: demo
  AZURE_VMSS_NAME: pandu-ai
  PYTHON_VERSION: '3.10.12'
  AZURE_STORAGE_ACCOUNT: pandutoheed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: List scripts directory
      run: |
        ls -R scripts

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload deployment scripts to Azure Storage
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob upload-batch -d scripts --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} -s ./scripts --auth-mode login --verbose

    - name: List blobs in scripts container
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage blob list --container-name scripts --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --auth-mode login --output table

    - name: Generate SAS token
      id: sas
      uses: azure/CLI@v1
      with:
        inlineScript: |
          end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
          sas=`az storage container generate-sas -n scripts --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --permissions r --expiry $end --auth-mode login --as-user --output tsv`
          echo "::set-output name=token::$sas"

    - name: Update VMSS model and trigger update
      uses: azure/CLI@v1
      with:
        inlineScript: |
          fileUri="https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/scripts/deployment_scripts.txt?${{ steps.sas.outputs.token }}"
          az vmss extension set \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --vmss-name ${{ env.AZURE_VMSS_NAME }} \
            --name CustomScript \
            --publisher Microsoft.Azure.Extensions \
            --settings "{\"fileUris\":[\"$fileUri\"],\"commandToExecute\":\"bash deploy.sh\"}"
          
          az vmss update-instances --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_VMSS_NAME }} --instance-ids "*"

    - name: Azure logout
      run: |
        az logout
      if: always()
