name: Deploy FastAPI to VMSS

on:
  push:
    branches: [ main ]

env:
  AZURE_RESOURCE_GROUP: demo
  AZURE_VMSS_NAME: pandu-ai
  PYTHON_VERSION: '3.10.12'
  AZURE_STORAGE_ACCOUNT: pandutoheed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create deploy.sh
      run: |
        mkdir -p scripts
        cat << 'EOF' > scripts/deploy.sh
        #!/bin/bash
        set -e

        # Update and install dependencies
        sudo apt-get update
        sudo apt-get install -y python3-pip git

        sudo rm -rf /home/useradmin/app

        # Clone the repository
        git clone https://github.com/Toheed07/azure-vmss.git /home/useradmin/app

        # Set up the application
        cd /home/useradmin/app

        python3 -m venv venv
        source venv/bin/activate

        sudo chown -R useradmin:useradmin /home/useradmin/app/venv

        pip3 install -r requirements.txt

        # Set up systemd service
        sudo tee /etc/systemd/system/fastapi.service > /dev/null << EOT
        [Unit]
        Description=FastAPI application
        After=network.target

        [Service]
        User=azureuser
        WorkingDirectory=/home/azureuser/app
        ExecStart=/home/useradmin/app/venv/bin/python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
        Restart=always

        [Install]
        WantedBy=multi-user.target
        EOT

        # Start the service
        sudo systemctl daemon-reload
        sudo systemctl enable fastapi
        sudo systemctl start fastapi

        echo "Deployment completed successfully"
        EOF

        chmod +x scripts/deploy.sh

    - name: Display deploy.sh contents
      run: cat scripts/deploy.sh

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload deployment scripts to Azure Storage
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az storage container create --name scripts --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --auth-mode login
          az storage blob upload --container-name scripts --file ./scripts/deploy.sh --name deploy.sh --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --auth-mode login --content-type "text/x-sh" --overwrite

    - name: Generate SAS token
      id: sas
      uses: azure/CLI@v1
      with:
        inlineScript: |
          end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
          sas=`az storage container generate-sas -n scripts --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --permissions r --expiry $end --auth-mode login --as-user --output tsv`
          echo "token=$sas" >> $GITHUB_OUTPUT

    - name: Update VMSS model and trigger update
      uses: azure/CLI@v1
      with:
        inlineScript: |
          fileUri="https://${{ env.AZURE_STORAGE_ACCOUNT }}.blob.core.windows.net/scripts/deploy.sh?${{ steps.sas.outputs.token }}"
          az vmss extension set \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --vmss-name ${{ env.AZURE_VMSS_NAME }} \
            --name CustomScript \
            --publisher Microsoft.Azure.Extensions \
            --settings "{\"fileUris\":[\"$fileUri\"],\"commandToExecute\":\"bash deploy.sh\"}"
          
          az vmss update-instances --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_VMSS_NAME }} --instance-ids "*"

    - name: Azure logout
      run: |
        az logout
      if: always()